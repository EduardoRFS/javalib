Here is some stuff that need to be done:
* Correctness
- take in account visibility in JProgram (lookups and resolves of fields
  and methods)
- test lookups and resolves by comparing with jvm traces
- BUG: it should be possible to have more than one LocalVariableTable
  per code attribute (there can be one per local variable) (jLow2High)
- BUG: when unparsing, if a constant refered in the code is not in the
  constant pool it is added, but it seems it's too late because the
  constant pool is written first. (the cause might be that the
  Attribute representation is too high level)

* Compatibility with Java 5
- Use AttributeSignature to print signatures of methods, fields and
  class if present (case of generics)
- Add AttributeLocalVariableTypeTable (see §4.8.13)
  (LocalVariableTable for generics)
- Add AttributeRuntimeVisibleAnnotations (see §4.8.15)
- Add AttributeRuntimeInvisibleAnnotations (see §4.8.16)
- Add AttributeRuntimeVisibleParameterAnnotations (see §4.8.17)
- Add AttributeRuntimeInvisibleParameterAnnotations (see §4.8.18)
- Add AttributeAnnotationDefault (see §4.8.19)
- Check modifications of UTF8 encoding (§4.5.7)

* Extra functionalities
- check the compatibility of JavaLib with Java 6 and Java 7
- we should define equal on JProgram.program (and JClassLow.jclass) to
  be able to do some more serious tests
- jDumpLow : should we dump the constant pool? (it seems many other
  things are not dump by jDumpLow, but JPrint and jLow2High offer much
  more)
- try to see if the dependency to unix.cma can be removed
