{b {L Introduction}}

JavaLib is a library to access .class files from OCaml.
Look at sample.ml sources to see how you can parse and dump a class file.
The command "sample Main.class" will parse and dump the class file.

{2 Quick start}

{b {L Prerequisites}}

- [Extlib]
- [CamlZip]

{b {L Installing}}

Edit Makefile.config (see Makefile.config.example). Then:
- 	[make install]
- 	[make doc] if you want the html documentation.

Note that, depending on the location of the CamlZip shared library, you may need
to specify a -dllpath option when linking the main program for bytecode compilation.

{b {L Documentation}}

For documentation you can :
- browse the api below
- read http://java.sun.com/docs/books/vmspec/2nd-edition/html/ClassFile.doc.html
  for more informations about the class file format
- send an email to Laurent Hubert or Tiphaine Turpin <first.last\@irisa.fr>.

{b {L About this version}}

This version has a slightly different interface from the previous one.
All references to the constant pool have been removed from the data
structures, and replaced by their value, making the use of the library
easier. The constant pool is still present however.

Some wide instructions also have been removed, and merged with their
simple version.

{b {L Authors}}

JavaLib was initially developped by Nicolas Cannasse.

Frédéric Besson made some corrections.

Laurent Hubert then modified it during an internship at IRISA (Rennes, France)
in the Lande team, during the summer 2005.

Étienne André then modified it during an internship at IRISA
in the Lande team, between March and July 2006.
These modifications mainly concerned an error about the "wide"
instruction, which was definitely not properly coded.

Tiphaine Turpin <first.last\@.irisa.fr> added the unparsing feature.

{2 API}

{b {L Representation of classes}}
{!modules: JBasics JClass JClassLow JDumpBasics JDump JDumpLow}

{b {L High level manipulations of programs}}
{!modules: JFile JProgram JControlFlow}

{b {L Other}}
{!modules: JCode JParse JUnparse JInstruction JLow2High JHigh2Low}

{b {L Indexes}}

{!indexlist}
